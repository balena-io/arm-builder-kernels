--- a/kernel/sys.c
+++ b/kernel/sys.c
@@ -1209,6 +1209,21 @@ SYSCALL_DEFINE0(setsid)

 DECLARE_RWSEM(uts_sem);

+#ifdef COMPAT_UTS_MACHINE
+static char compat_uts_machine[__OLD_UTS_LEN+1] = COMPAT_UTS_MACHINE;
+
+static int __init parse_compat_uts_machine(char *arg)
+{
+   strncpy(compat_uts_machine, arg, __OLD_UTS_LEN);
+   compat_uts_machine[__OLD_UTS_LEN] = 0;
+   return 0;
+}
+early_param("compat_uts_machine", parse_compat_uts_machine);
+
+#undef COMPAT_UTS_MACHINE
+#define COMPAT_UTS_MACHINE compat_uts_machine
+#endif
+
 #ifdef COMPAT_UTS_MACHINE
 #define override_architecture(name) \
	(personality(current->personality) == PER_LINUX32 && \
@@ -1228,24 +1243,9 @@ static int override_release(char __user *release, size_t len)
 {
	int ret = 0;

+	strncpy(compat_uts_machine, "armv7l", __OLD_UTS_LEN);
	if (current->personality & UNAME26) {
-		const char *rest = UTS_RELEASE;
-		char buf[65] = { 0 };
-		int ndots = 0;
-		unsigned v;
-		size_t copy;
-
-		while (*rest) {
-			if (*rest == '.' && ++ndots >= 3)
-				break;
-			if (!isdigit(*rest) && *rest != '.')
-				break;
-			rest++;
-		}
-		v = ((LINUX_VERSION_CODE >> 8) & 0xff) + 60;
-		copy = clamp_t(size_t, len, 1, sizeof(buf));
-		copy = scnprintf(buf, copy, "2.6.%u%s", v, rest);
-		ret = copy_to_user(release, buf, copy + 1);
+		strncpy(compat_uts_machine, "armv6l", __OLD_UTS_LEN);
	}
	return ret;
 }
